


.speed-default {
  
}

.size-sm {
  width: 18px;
  height: 18px;
}

.size-md {
  width: 32px;
  height: 32px;
}

.size-xl {
  width: 48px;
  height: 48px;
}

.size-xxl {
  width: 64px;
  height: 64px;
}


.size-xxxl {
  width: 96px;
  height: 96px;
}


.container {
    --uib-size: 40px;
    --uib-color: black;
    --uib-speed: 2s;

    &_bouncy {
      --uib-cube-size: calc(var(--uib-size) * 0.2);
      --uib-arc-1: -90deg;
      --uib-arc-2: 90deg;
      display: flex;
      align-items: flex-end;
      justify-content: center;
      width: var(--uib-size);
      height: calc(100% - var(--uib-cube-size) / 2);
      padding-bottom: calc(var(--uib-cube-size) / 2);
    }

    &_dots { 
      height: calc(var(--uib-size) * 0.6);
      width: var(--uib-size);
      display: flex;
      align-items: flex-end;
      padding-bottom: 20%;
      justify-content: space-between;
    }

    &_ring {
        --uib-bg-opacity: 0.5;
        height: var(--uib-size);
        width: var(--uib-size);
        transform-origin: center;
        animation: rotate var(--uib-speed) linear infinite;
        will-change: transform;
        overflow: visible;
      }
    }

    // ring

  .car {
    fill: none;
    stroke: var(--uib-color);
    stroke-dasharray: 1, 200;
    stroke-dashoffset: 0;
    stroke-linecap: round;
    animation: stretch calc(var(--uib-speed) * 0.75) ease-in-out infinite;
    will-change: stroke-dasharray, stroke-dashoffset;
    transition: stroke 0.5s ease;
  }

  .track {
    fill: none;
    stroke: var(--uib-color);
    opacity: var(--uib-bg-opacity);
    transition: stroke 0.5s ease;
  }

  @keyframes rotate {
    100% {
      transform: rotate(360deg);
    }
  }

  @keyframes stretch {
    0% {
      stroke-dasharray: 0, 150;
      stroke-dashoffset: 0;
    }
    50% {
      stroke-dasharray: 75, 150;
      stroke-dashoffset: -25;
    }
    100% {
      stroke-dashoffset: -100;
    }
  }

  // bouncy


  @keyframes metronome {
    0% {
      transform: rotate(var(--uib-arc-1));
    }

    50% {
      transform: rotate(var(--uib-arc-2));
    }

    50.001% {
      transform: translateX(var(--cube-container-height)) rotate(var(--uib-arc-1));
    }

    100% {
      transform: rotate(var(--uib-arc-1));
    }
  }

  @keyframes morph_bouncy {
    0% {
      transform: scaleX(0.65) scaleY(1.3);
    }

    15% {
      transform: scaleX(1.5);
    }

    30%,
    50.001% {
      transform: scaleX(1);
    }

    55% {
      transform: scaleX(0.8) scaleY(1.2);
      animation-timing-function: ease-in;
    }

    65%,
    80% {
      transform: scaleX(1);
    }

    90%,
    100% {
      transform: scaleX(0.65) scaleY(1.3);
    }
  }

  // dots

  @keyframes jump {
    0% {
      transform: translateY(0px);
    }
  
    30% {
      transform: translateY(0px);
      animation-timing-function: ease-out;
    }
  
    50% {
      transform: translateY(-200%);
      animation-timing-function: ease-in;
    }
  
    75% {
      transform: translateY(0px);
      animation-timing-function: ease-in;
    }
  }
  
  @keyframes morph_dots {
    0% {
      transform: scaleY(1);
    }
  
    10% {
      transform: scaleY(1);
    }
  
    20%,
    25% {
      transform: scaleY(0.6) scaleX(1.3);
      animation-timing-function: ease-in-out;
    }
  
    30% {
      transform: scaleY(1.15) scaleX(0.9);
      animation-timing-function: ease-in-out;
    }
  
    40% {
      transform: scaleY(1);
    }
  
    70%,
    85%,
    100% {
      transform: scaleY(1);
    }
  
    75% {
      transform: scaleY(0.8) scaleX(1.2);
    }
  }

  .cube {
    flex-shrink: 0;
    width: calc(var(--uib-size) * 0.2);
    height: calc(var(--uib-size) * 0.2);
    animation: jump var(--uib-speed) ease-in-out infinite;

    &__inner {
      display: block;
      height: 100%;
      width: 100%;
      border-radius: 25%;
      background-color: var(--uib-color);
      transform-origin: center bottom;
      animation: morph var(--uib-speed) ease-in-out infinite;
      transition: background-color 0.3s ease;
    }
  }
  
  .cube:nth-child(2) {
    animation-delay: calc(var(--uib-speed) * -0.36);
  
    .cube__inner {
      animation-delay: calc(var(--uib-speed) * -0.36);
    }
  }
  .cube:nth-child(3) {
    animation-delay: calc(var(--uib-speed) * -0.2);
  
    .cube__inner {
      animation-delay: calc(var(--uib-speed) * -0.2);
    }
  }